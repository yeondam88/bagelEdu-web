---
import type { HTMLAttributes } from 'astro/types'

interface CustomProps {
  variant?: 'primary' | 'secondary' | 'accent'
  size?: 'lg' | 'sm'
  href?: string
}

type Props = CustomProps & HTMLAttributes<'a'> & HTMLAttributes<'button'>

const {
  variant = 'primary',
  size = 'lg',
  href,
  class: className,
  ...attrs
} = Astro.props

const variantStyles = {
  primaryClassName: 'text-purple-900 bg-yellow-500 hover:bg-yellow-600',
  secondaryClassName:
    'text-purple-900 bg-purple-200 hover:text-white hover:bg-purple-600',
  accentClassName: 'text-white bg-purple-600 hover:bg-purple-500',
}

const sizeStyles = {
  smClassName: 'px-5 py-2.5 text-base',
  lgClassName: 'px-8 py-3.5 text-lg',
}

const defaultClassName =
  'font-medium relative leading-normal inline-flex items-center justify-center duration-300 ease-in-out rounded-full outline-none group'
---

{/* Render link if href exists otherwise render button */}
{
  href ? (
    <a
      href={href}
      class:list={[
        defaultClassName,
        variantStyles[`${variant}ClassName`],
        sizeStyles[`${size}ClassName`],
        className,
      ]}
      {...attrs}
    >
      <slot />
    </a>
  ) : (
    <button
      class:list={[
        defaultClassName,
        variantStyles[`${variant}ClassName`],
        sizeStyles[`${size}ClassName`],
        className,
      ]}
      {...attrs}
    >
      <slot />
    </button>
  )
}
