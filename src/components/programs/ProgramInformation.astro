---
import type { CollectionEntry } from 'astro:content'
import { Icon } from 'astro-icon/components'
import ProgramTutor from './ProgramTutor.astro'
import ProgramInfoCard from './ProgramInfoCard.astro'

interface Props {
  program: CollectionEntry<'programs'>
}

type LocalizedString = {
  ko: string
  en: string
}

interface StemProgram {
  name: string
  duration: string
  description: LocalizedString
}

const { program } = Astro.props
const { infoSection } = program.data
const { Content } = await program.render()

// Convert individual fields to card data
const cards = [
  {
    icon: 'tabler:book',
    title: {
      ko: 'GPA Premier Consulting and Extracurricular Profile',
      en: 'GPA Premier Consulting and Extracurricular Profile'
    },
    description: {
      ko: infoSection.ages?.ko || '',
      en: infoSection.ages?.en || ''
    }
  },
  {
    icon: 'tabler:calendar',
    title: {
      ko: 'Tailored Academic Roadmap',
      en: 'Tailored Academic Roadmap'
    },
    description: {
      ko: infoSection.duration?.ko || '',
      en: infoSection.duration?.en || ''
    }
  },
  {
    icon: 'tabler:target',
    title: {
      ko: 'Target college List & College applications',
      en: 'Target college List & College applications'
    },
    description: {
      ko: infoSection.schedule?.ko || '',
      en: infoSection.schedule?.en || ''
    }
  },
  {
    icon: 'tabler:box',
    title: {
      ko: '표준화 시험 준비',
      en: 'Standardized Test Preparation'
    },
    description: {
      ko: infoSection.classSize?.ko || '',
      en: infoSection.classSize?.en || ''
    }
  },
  {
    icon: 'tabler:pencil',
    title: {
      ko: '에세이 작성 연습 및 인터뷰 트레이닝',
      en: 'Essay Writing Practice & Interview Training'
    },
    description: {
      ko: infoSection.program1?.ko || '',
      en: infoSection.program1?.en || ''
    }
  },
  {
    icon: 'tabler:sun',
    title: {
      ko: '여름 활동 계획: 연구, 여름 캠프',
      en: 'Summer Activities Planning: Work Research, Summer Camp'
    },
    description: {
      ko: infoSection.program2?.ko || '',
      en: infoSection.program2?.en || ''
    }
  },
  {
    icon: 'tabler:compass',
    title: {
      ko: '진로 상담',
      en: 'Career Counseling'
    },
    description: {
      ko: infoSection.program3?.ko || '',
      en: infoSection.program3?.en || ''
    }
  },
  {
    icon: 'tabler:clock',
    title: {
      ko: '동기부여, 시간 관리 및 전략',
      en: 'Motivation, Time Management & Strategies'
    },
    description: {
      ko: infoSection.program4?.ko || '',
      en: infoSection.program4?.en || ''
    }
  },
]
---

<section class="relative overflow-hidden bg-[#F5F5F7] py-16 sm:py-24">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="flex flex-col items-start gap-4 lg:mb-12">
      <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
        <span x-data={`{ headline: ${JSON.stringify(infoSection.headline)} }`} x-text="$store.language === 'ko' ? headline.ko : headline.en"></span>
      </h2>
      <p class="text-lg text-gray-600">
        <span x-data={`{ text: ${JSON.stringify(infoSection.text)} }`} x-text="$store.language === 'ko' ? text.ko : text.en"></span>
      </p>
    </div>

    {
      program.data.name.en === 'Undergraduate Admissions Consulting' && (
        <>
          <div class="mt-12">
            <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
              {cards.map((card) => (
                <ProgramInfoCard
                  {...card}
                  gradientColors={{
                    bgColor: '#F5F5F7',
                    iconBgColor: '#4F46E5',
                    startColor: '#4F46E5',
                    endColor: '#9333EA',
                  }}
                />
              ))}
            </div>
          </div>
          <div class="tutor-content mt-12">
            <Content />
          </div>
        </>
      )
    }

    {
      program.data.name.en === 'Tutor Service Online/Offline' && (
        <>
          <ProgramTutor program={program} />
          <div class="tutor-content mt-12">
            <Content />
          </div>
        </>
      )
    }

    {
      program.data.name.en === 'Summer/Winter Camp' &&
        program.data.stemPrograms && (
          <div>
            <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl lg:py-4">
              <span x-data x-text="$store.language === 'ko' ? 'STEM 프로그램' : 'STEM Programs for Students'"></span>
            </h2>

            {/* Desktop view */}
            <div class="hidden overflow-x-auto md:block">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
                    >
                      <span x-data x-text="$store.language === 'ko' ? '프로그램명' : 'Program Name'"></span>
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
                    >
                      <span x-data x-text="$store.language === 'ko' ? '기간' : 'Duration'"></span>
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
                    >
                      <span x-data x-text="$store.language === 'ko' ? '설명' : 'Description'"></span>
                    </th>
                  </tr>
                </thead>
                <tbody class="divide-y divide-gray-200 bg-white">
                  {program.data.stemPrograms?.programs.map(
                    (prog) => (
                      <tr>
                        <td class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-900">
                          {prog.name}
                        </td>
                        <td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
                          {prog.duration}
                        </td>
                        <td class="px-6 py-4 text-sm text-gray-500">
                          <span x-data x-text={`$store.language === 'ko' ? ${JSON.stringify(prog.description.ko)} : ${JSON.stringify(prog.description.en)}`}></span>
                        </td>
                      </tr>
                    ),
                  )}
                </tbody>
              </table>
            </div>

            {/* Mobile view */}
            <div class="space-y-6 md:hidden">
              {program.data.stemPrograms?.programs.map((prog) => (
                <div class="space-y-3 rounded-lg bg-white p-4 shadow-sm">
                  <div class="font-medium text-gray-900">{prog.name}</div>
                  <div class="text-sm text-gray-500">
                    <span class="font-medium" x-data x-text="$store.language === 'ko' ? '기간:' : 'Duration:'"></span> {prog.duration}
                  </div>
                  <div class="text-sm text-gray-500">
                    <span class="font-medium" x-data x-text="$store.language === 'ko' ? '설명:' : 'Description:'"></span>
                    <br />
                    <span x-data x-text={`$store.language === 'ko' ? ${JSON.stringify(prog.description.ko)} : ${JSON.stringify(prog.description.en)}`}></span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )
    }
    {
      program.data.AdditionalSection && (
        <div class="mt-12">
          <div class="space-y-12">
            <div>
              <h3 class="text-2xl font-bold tracking-tight text-gray-900">
                <span x-data={`{ headline: ${JSON.stringify(program.data.AdditionalSection.headline1)} }`} x-text="$store.language === 'ko' ? headline.ko : headline.en"></span>
              </h3>
              <p class="mt-4 whitespace-pre-line text-gray-600 leading-relaxed text-lg space-y-6">
                <span x-data={`{ text: ${JSON.stringify(program.data.AdditionalSection.text1)} }`} x-text="$store.language === 'ko' ? text.ko : text.en"></span>
              </p>
            </div>

            <div>
              <h3 class="text-2xl font-bold tracking-tight text-gray-900">
                <span x-data={`{ headline: ${JSON.stringify(program.data.AdditionalSection.headline2)} }`} x-text="$store.language === 'ko' ? headline.ko : headline.en"></span>
              </h3>
              <p class="mt-4 whitespace-pre-line text-gray-600">
                <span x-data={`{ text: ${JSON.stringify(program.data.AdditionalSection.text2)} }`} x-text="$store.language === 'ko' ? text.ko : text.en"></span>
              </p>
            </div>
          </div>
        </div>
      )
    }
  </div>
</section>

<style>
  .shadow-sm {
    box-shadow:
      0 1px 3px 0 rgba(0, 0, 0, 0.1),
      0 1px 2px -1px rgba(0, 0, 0, 0.1);
  }
  .shadow-md {
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -2px rgba(0, 0, 0, 0.1);
  }

  .tutor-content {
    h2 {
      font-size: 1.75rem;
      font-weight: 700 !important;
      color: rgb(17 24 39 / var(--tw-text-opacity, 1));
      margin-top: 1rem;
      margin-bottom: 1rem;
    }

    p {
      color: rgb(75 85 99 / var(--tw-text-opacity, 1));
      white-space: pre-line;
      margin-top: 1rem;
    }
  }
</style>
