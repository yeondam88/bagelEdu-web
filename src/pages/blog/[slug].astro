---
import { getCollection } from 'astro:content'
import Layout from '@layouts/Layout.astro'
import { formatDate } from '../../utils/date'

export const prerender = true

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog')
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

const { entry } = Astro.props
if (!entry) throw new Error('No blog entry found')

const { Content } = await entry.render()
---

<Layout title={entry.data.title}>
  <section class="relative bg-gray-50 py-16 sm:py-24">
    <div class="absolute inset-0 overflow-hidden">
      <div
        class="absolute left-1/2 top-0 h-[800px] w-[800px] -translate-x-1/2 -translate-y-1/2 rounded-full bg-gray-100/60 blur-3xl"
      >
      </div>
      <div
        class="absolute bottom-0 right-0 h-[600px] w-[600px] translate-x-1/2 translate-y-1/2 rounded-full bg-gray-50/50 blur-3xl"
      >
      </div>
    </div>

    <div class="relative mx-auto max-w-7xl px-4 pb-24 pt-20 lg:pt-24">
      <div class="flex max-w-2xl flex-col items-start">
        <a href="/blog" class="inline-flex items-center mb-8 text-sm font-medium text-gray-800 hover:text-gray-800 pt-8">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
          </svg>
          Back to Blog
        </a>
        <div class="max-w-2xl">
          {
            entry.data.category && (
              <span class="mb-4 inline-flex items-center rounded-lg bg-gray-100 px-3 py-1.5 text-sm font-medium text-gray-800">
                {entry.data.category}
              </span>
            )
          }

          <h1 class="mb-6 text-3xl font-bold text-gray-900 md:text-4xl">
            {entry.data.title}
          </h1>

          <div class="flex flex-col gap-4 text-gray-600">
            <div class="flex items-center gap-3">
              <img
                src={entry.data.authorImage}
                alt={entry.data.author}
                class="h-8 w-8 rounded-full object-cover"
              />
              <div>
                <div class="font-medium text-gray-900">{entry.data.author}</div>
                <div class="text-xs">CEO / Founder</div>
              </div>
            </div>

            {
              entry.data.date && (
                <time
                  datetime={new Date(entry.data.date).toISOString()}
                  class="text-sm"
                >
                  {formatDate(new Date(entry.data.date))}
                </time>
              )
            }
          </div>
        </div>
        
      </div>
      <div class="absolute right-0 top-0 h-full w-1/3">
        <div class="relative h-full w-full">
          <img
            src={entry.data.image.url}
            alt={entry.data.image.alt}
            width={400}
            height={300}
            class="absolute right-[5%] top-[15%] rounded-lg shadow-lg"
          />
          <img
            src={entry.data.image.url}
            alt={entry.data.image.alt}
            width={350}
            height={250}
            class="absolute right-[25%] top-[40%] rounded-lg shadow-lg"
          />
          <img
            src={entry.data.image.url}
            alt={entry.data.image.alt}
            width={300}
            height={200}
            class="absolute bottom-[20%] right-[15%] rounded-lg shadow-lg"
          />
        </div>
      </div>
    </div>
  </section>

  <article class="mx-auto max-w-3xl px-4 py-16 sm:px-6 lg:px-8">
    <div
      class="prose prose-lg max-w-none prose-headings:font-bold prose-headings:tracking-tight prose-a:text-gray-600 hover:prose-a:text-gray-500 prose-img:rounded-xl"
    >
      <Content />
    </div>
  </article>
</Layout>

<style>
  /* Optional: Add custom styles for your content */
  :global(.prose img) {
    @apply mx-auto rounded-lg shadow-md;
  }

  :global(.prose pre) {
    @apply overflow-x-auto rounded-lg shadow-md;
  }

  :global(.prose blockquote) {
    @apply border-l-4 border-purple-500;
  }
</style>
