---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../lib/supabase/client';
import BlogPost from '../../components/blog/BlogPost';
import { BlogService } from '../../services/BlogService';
import type { BlogPostWithAuthor } from '../../services/BlogService';

// Get the slug from the URL
const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect('/blog');
}

// Fetch the blog post server-side
const { data: post, error } = await supabase
  .from('blog_posts')
  .select(`
    *,
    author:author_id (
      id,
      email
    )
  `)
  .eq('slug', slug)
  .eq('status', 'published')
  .single();

// If post not found, redirect to blog index
if (error || !post) {
  return Astro.redirect('/blog');
}

// Get the preferred language from the user's browser or default to English
const preferredLanguage = Astro.request.headers.get('accept-language')?.split(',')[0]?.split('-')[0] || 'en';

// Get localized title and description for SEO
const title = BlogService.getLocalizedField(post.title, preferredLanguage) || 'Blog Post';
const excerpt = BlogService.getLocalizedField(post.excerpt, preferredLanguage) || '';

// Prepare page metadata
const pageTitle = { 
  en: title, 
  ko: title 
};

const pageDescription = { 
  en: excerpt, 
  ko: excerpt 
};

// Format date for meta tags
const formattedDate = new Date(post.published_at || post.created_at).toISOString();

// Prepare structured data for SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": title,
  "description": excerpt,
  "image": post.featured_image || "",
  "datePublished": post.published_at || post.created_at,
  "dateModified": post.updated_at || post.created_at,
  "author": {
    "@type": "Person",
    "name": post.author?.email || "Anonymous"
  }
};
---

<Layout 
  title={pageTitle} 
  description={pageDescription}
>
  <div class="blog-post-container">
    <BlogPost 
      post={post as BlogPostWithAuthor} 
      preferredLanguage={preferredLanguage}
      client:load
    />
  </div>

  <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
</Layout>

<style>
  .blog-post-container {
    max-width: 900px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .blog-post-container {
      padding: 1rem;
    }
  }
</style>
