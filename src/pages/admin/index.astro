---
import { supabase } from '../../lib/supabase/client';
import AdminLayout from '../../layouts/AdminLayout.astro';
import { DashboardStats } from '../../components/admin/dashboard-stats';
import { ContentChart } from '../../components/admin/content-chart';
import { ActivityLog, type ActivityItem } from '../../components/admin/activity-log';
import { Card, CardHeader, CardTitle, CardContent } from '../../components/components/ui/card';
import { record } from 'astro:schema';

// Define blog post type
interface BlogPost {
  id: string;
  title: string;
  created_at: string;
}

// Only fetch content counts when we're on the server
// The AdminLayout will handle authentication checking
let contentCounts = {
  blogs: 0,
  programs: 0,
  testimonials: 0,
  faqs: 0
};

let recentActivities: ActivityItem[] = [];

try {
  // Server-side authentication check (similar to AdminLayout but needed for content)
  const { data, error } = await supabase.auth.getSession();
  const isAuthenticated = !!(data.session?.user?.id);
  
  if (isAuthenticated) {
    // Only fetch content counts when authenticated
    const [
      blogPostsResponse,
      programsResponse,
      testimonialsResponse,
      faqsResponse
    ] = await Promise.all([
      supabase.from('blog_posts').select('id'),
      supabase.from('programs').select('id'),
      supabase.from('testimonials').select('id'),
      supabase.from('faqs').select('id')
    ]);

    contentCounts = {
      blogs: blogPostsResponse.data?.length || 0,
      programs: programsResponse.data?.length || 0,
      testimonials: testimonialsResponse.data?.length || 0,
      faqs: faqsResponse.data?.length || 0
    };
    
    console.log('Content counts fetched successfully');
    
    // Mock recent activities data (until you build an actual activity log table)
    recentActivities = [
      {
        id: '1',
        action: 'Create',
        resource: 'Blog post: "Getting Started with Bagel Education"',
        timestamp: new Date(Date.now() - 3600000).toISOString(),
        user: 'Admin'
      },
      {
        id: '2',
        action: 'Update',
        resource: 'Program: "Summer Camp 2023"',
        timestamp: new Date(Date.now() - 86400000).toISOString(),
        user: 'Admin'
      },
      {
        id: '3',
        action: 'Delete',
        resource: 'FAQ: "How do I reset my password?"',
        timestamp: new Date(Date.now() - 172800000).toISOString(),
        user: 'Admin'
      }
    ];
  }
} catch (error) {
  console.error('Error fetching content counts:', error);
}

// Get recent content for dashboard
let recentBlogs: BlogPost[] = [];
try {
  if (contentCounts.blogs > 0) {
    const { data } = await supabase
      .from('blog_posts')
      .select('id, title, created_at')
      .order('created_at', { ascending: false })
      .limit(5);
    
    recentBlogs = data || [];
  }
} catch (error) {
  console.error('Error fetching recent blogs:', error);
}
---

<AdminLayout title="Admin Dashboard">
  <header class="mb-6">
    <h1 class="text-3xl font-bold">Dashboard</h1>
    <p class="text-muted-foreground">Welcome to the Bagel Education admin dashboard</p>
  </header>
  
  <!-- Stats overview -->
  <DashboardStats client:load stats={contentCounts} />
  
  <div class="grid gap-6 mt-8 lg:grid-cols-2">
    <!-- Content Distribution Chart -->
    <ContentChart client:load stats={contentCounts} />
    
    <!-- Activity Log -->
    <ActivityLog client:load activities={recentActivities} />
  </div>
  
  <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3 mt-8">
    <!-- Recent blog posts -->
    <Card className="col-span-2">
      <CardHeader>
        <CardTitle>Recent Blog Posts</CardTitle>
      </CardHeader>
      <CardContent>
        {recentBlogs.length > 0 ? (
          <div class="space-y-2">
            {recentBlogs.map((blog) => (
              <div class="flex justify-between items-center border-b pb-2">
                <div class="truncate">{blog.title.en.en}</div>
                <div class="text-sm text-muted-foreground">
                  {new Date(blog.created_at).toLocaleDateString()}
                </div>
              </div>
            ))}
            <div class="pt-2">
              <a href="/admin/content/blog" class="text-primary hover:underline text-sm">
                View all blog posts â†’
              </a>
            </div>
          </div>
        ) : (
          <div class="text-center py-6 text-muted-foreground">
            <p>No blog posts found</p>
            <a href="/admin/content/blog/new" class="text-primary hover:underline text-sm mt-2 inline-block">
              Create your first post
            </a>
          </div>
        )}
      </CardContent>
    </Card>
    
    <!-- Quick actions -->
    <Card>
      <CardHeader>
        <CardTitle>Quick Actions</CardTitle>
      </CardHeader>
      <CardContent>
        <div class="space-y-2">
          <a href="/admin/content/blog/new" class="block w-full p-2 bg-primary text-primary-foreground rounded-md text-center hover:bg-primary/90">
            Create Blog Post
          </a>
          <a href="/admin/content/programs/new" class="block w-full p-2 bg-card border border-border rounded-md text-center hover:bg-accent">
            Add Program
          </a>
          <a href="/admin/content/testimonials/new" class="block w-full p-2 bg-card border border-border rounded-md text-center hover:bg-accent">
            Add Testimonial
          </a>
          <a href="/admin/content/faqs/new" class="block w-full p-2 bg-card border border-border rounded-md text-center hover:bg-accent">
            Add FAQ
          </a>
        </div>
      </CardContent>
    </Card>
  </div>
</AdminLayout> 